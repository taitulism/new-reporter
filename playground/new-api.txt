run 1. a & b
    2. c
    3. end

newFlow()
    .run(a, b)
    .then(c)
    .done(end)




run 1. a & (b1 > b2)
    2. end

newFlow()
    .run(a)
    .and(b1)
        .then(b2)
    .done(end)




run 1. a
    2. b & c
    3. end

newFlow()
    .run(a)
    .then(b, c)
    .done(end)





run 1. a
    2. b
    3. c1 & c2

newFlow()
    .run(a)
    .then(b)
    .then(c1, c2)
    .done(end)




run 1. a
    2. b & (c1 > c2)
    3. d

newFlow()
    .run(a)
    .then(b)
        .and(newFlow().run(c1).then(c2))
    .then(d)
    .done(end)

run 1. a
    2. b & (c1 > c2)
    3. d & [e1, e2, e3]       <-- forEach parallel/serial
    4. f & (g1 & g2) > g3

newFlow()
    .run(a)
    .then(b)
        .and(flow().run(c1).then(c2))
    .then(d)
        .and(flow([e1, e2, e3]).parallel((task, item, index)=>{
            doSomething(item, (err, data)=>{
                if (err) return task.error(err)

                this.data.parsedItems.push(data);

                task.done(serialPassData);
            })
        }))
    .then(f)
        .and(flow().run(g1, g2).then(g3))
    .done(end)


c = newFlow.run(c1).then(c2)

newFlow()
    .run(a)
    .then(b, c)
    .then(d)
    .done(end)

newFlow()
    .run(statFolder)
    .then( readDir, statFile.then(readContent) )
    .then(d)
    .done(end)

newFlow()
    .run(statFolder)
    .then(readDir)
    .then(each(statFile))
    .done(end)

run 1. (a > b) & c1 > c2 > d

newFlow()
    .run(a)
        .then(b)
    .and(c1)
        .then(c2)
        .then(d)
    .done(end)




run 1. a > b, c > d

newFlow()
    .run(a)
        .then(b)
    .and(c)
        .then(d)
    .done(end)


run 1. a > (b1 & b2) > c

newFlow()
    .run(a)
    .then(b1, b2)
    .then(c)
    .done(end)


run 1. a > (foreach x b1) > c

newFlow()
    .run(a)
        .then().forEach()

    .then(c)
    .done(end)
